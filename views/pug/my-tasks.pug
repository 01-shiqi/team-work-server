extends layouts/_layout.pug

block variables
	- var activePage = 'my-tasks'
	- var activeGroup = 'forms'
	- var title = '我的任务'
	- var icon = 'fa-bars'

block title
	title Team Work

block content
	.app-title
		div
			h1
				i.fa(class=`${icon}`)
				|  #{title}

		ul.app-breadcrumb.breadcrumb
			li.breadcrumb-item
				i.fa.fa-home.fa-lg
			li.breadcrumb-item
				| 任务
			li.breadcrumb-item
				a(href="#") #{title}

	.modal.fade.editDialog#task-dialog(aria-hide="true")
		.modal-dialog(role='dialog', style="width:1200px;max-width:1200px;top:50px;")
			.modal-content
				.modal-header
					h5.modal-title#task-dialog-title 创建任务
					button.close(type='button', data-dismiss='modal', aria-label='Close')
						span(aria-hidden='true') ×
				.modal-body
					form.row
						include ./components/_task-editor
				.modal-footer
					button.btn.btn-secondary(type='button', data-dismiss='modal') 关闭

	.row
		.col-md-12
			.tile
				include ./components/_task-navigation
				include ./components/_task-table
				include ./components/_pagination						

block specific-js
	script(type='text/javascript', src="js/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js")
	script(type='text/javascript', src="js/plugins/select2.min.js")
	script(type='text/javascript', src="js/plugins/sweetalert.min.js")
	script(type='text/javascript', src="js/plugins/bootstrap-notify.min.js")
	script(type='text/javascript', src="js/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js")
	script(type='text/javascript', src="js/plugins/bootstrap-datepicker/locales/bootstrap-datepicker.zh-CN.min.js", charset="UTF-8")
	script(type='text/javascript', src="js/validate.js")
	script(type='text/javascript', src="js/_table.js")
	script(type="text/javascript").

		// 设置任务对话框内容
		function setEditTaskDialogContent(taskID) {
			setSelect2Value('#taskType', getTableCellData(taskID, 1))
			setSelect2Value('#model', getTableCellData(taskID, 2))
			$('#dp-begin-time').val(getTableCellData(taskID, 3))
			$('#dp-end-time').val(getTableCellData(taskID, 4))
			setSelect2Value('#personHours', getTableCellData(taskID, 5))
			setSelect2Value('#executor', getTableRowData(taskID, 'data-executor-id'))
			$('#input-task-name').val(getTableCellData(taskID, '-task-name'))
			$('#taskContent').val(getTableCellData(taskID, '-task-content'))

			$('#task-dialog').attr('data-task-id', taskID)
			$('#task-dialog').attr('data-task-state', getTableCellData(taskID, 7))

			// 不允许查看工作量
			$('#personHours').html('')
			$('#label-executor').html('执行人')
			
		}
		
		// 根据对话框中的内容生成task对象
		function getTask() {
			let task = {
				id: $('#task-dialog').attr('data-task-id'),
				type: $('#taskType').val(),
				model: $('#model').val(),
				beginTime: $('#dp-begin-time').val(),
				endTime: $('#dp-end-time').val(),
				personHours: $('#personHours').val(), 
				state: $('#task-dialog').attr('data-task-state'),  
				executor: $('#executor').val(), 
				name: $('#input-task-name').val(), 
				content: $('#taskContent').val(),
			}
			
			return task
		}

		// 查看任务信息
		$('.btn-browse-task').click(function(){
			let taskID = $(this).val()
			setEditTaskDialogContent(taskID)
			$('#task-dialog').attr('data-edit-task-mode', 'update-task')
			$('#task-dialog-title').html('查看任务')
			$('.form-control').attr('disabled', true)
			$('#task-dialog').modal()
		})

		
		// 设置日期的当前时间和截至时间
		var now = new Date()
		$('#dp-begin-time').datepicker('setDate', now)
		$('#dp-end-time').datepicker('setDate', now)

		$(".input-no-empty").bind("input propertychange change",function(event) {
			if($(this).val() != '') {
				$(this).removeClass('is-invalid')
			}
		})

		function checkTaskInputValid(task) {
			if(!task.name){
				$('#input-task-name').addClass('is-invalid')
				return false
			}

			if(!task.content){
				$('#taskContent').addClass('is-invalid')
				return false
			}
			return true
		}

		$('#btn-commit').click(function(){

			let task = getTask()
			
			// 验证数据
			if(!checkTaskInputValid(task)){
				return;
			}

			let editTaskMode = $('#task-dialog').attr('data-edit-task-mode')

			let messageTitle = $('#task-dialog-title').html()

			//- 向后台发送更新数据请求
			$.ajax({
				url: "/" + editTaskMode + "/",
				type: "post",
				data: JSON.stringify(task),
				dataType: "json",
				success: function(res){
					if(res.succeed) {
						//- 更新任务列表
						$('#task-dialog').modal('hide')
						window.location.reload()
					} else {
						swal(messageTitle, messageTitle + "失败！ 原因：" + res.error, "error")
					}
				},

				error: function(res){
					swal(messageTitle, messageTitle + "失败！ 原因：" + res.error, "error")
				}
			})
		})

		//- 全选或取消全选
		$('#cb-select-all').click(function(){

			var allChecked = this.checked
			$(".cb-task-item").each(function(){
				this.checked = allChecked
			})
		})


		